// const taskNumber = null;
//numer przerabianego zadania

const path = require('path');
// importujÄ™ bibliotÄ™kÄ™ [path] z [node.js]
const HtmlWebpackPlugin = require('html-webpack-plugin');
// importujÄ™ odpowiedni plugin

const taskNumber = process.env.TASK_NUMBER;
// dla kaÅ¼dego taska przy odpalaniu build/start naleÅ¼y wpisaÄ‡ w terminalu numer 
// TASK_NUMBER=02 npm run build


module.exports = {
    entry: `./${taskNumber}/app.js`,
    // definiuje plik wejÅ›ciowy
    output: {
        path: path.resolve(__dirname, 'build'),
        // definiuje Å›cieÅ¼kÄ… wyjÅ›ciowÄ…
        filename: 'app.min.js',
        // definiujÄ™ nazwÄ™ pliku wyjÅ›ciowego
    },
    target: "web", 
    // niezbÄ™dne do uruchomienia automatycznego odÅ›wieÅ¼ania z webpack-dev-server@3
    // https://github.com/webpack/webpack-dev-server/issues/2758
    module: {
        rules: [
            {
                test: /\.js$/,
                // okreÅ›lam jakie pliki 
                // bÄ™dÄ… brane pod uwagÄ™
                exclude: /node_modules/,
                // okreÅ›lam wykluczenia
                use: 'babel-loader',
                // okreÅ›lam jaki [loader]
                // ma byÄ‡ wykorzystany
            }
        ]
        // obecnie brak dodatkowych ustawieÅ„
    },
    plugins: [
        new HtmlWebpackPlugin({
            template: `./${taskNumber}/index.html`,
            // wskazuje plik ÅºrÃ³dÅ‚owy
            filename: 'index.html'
            // okreÅ›lan nazwÄ™ dla pliku
        })
    ],
    devServer: {
        static: {
            directory: path.join(__dirname, 'build'), // Katalog dla plikÃ³w statycznych
        },
        watchFiles: ['**/*.html'], // ğŸ”¥ Obserwowanie zmian w plikach HTML
        hot: true,  // ğŸ”¥ WÅ‚Ä…czanie Hot Module Replacement (HMR) dla JS/CSS
        open: true, // Automatyczne otwieranie przeglÄ…darki
        port: 3000  // MoÅ¼esz ustawiÄ‡ inny port, np. 8080
    }
}
// eksportujÄ™ ustawienia dla webpack-a